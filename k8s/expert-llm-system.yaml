# Kubernetes Deployment for Expert LLM System
apiVersion: v1
kind: Namespace
metadata:
  name: expert-llm-system
  labels:
    app.kubernetes.io/name: expert-llm-system
    app.kubernetes.io/version: "1.0.0"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: expert-llm-config
  namespace: expert-llm-system
data:
  LOG_LEVEL: "INFO"
  STREAMLIT_SERVER_PORT: "8501"
  STREAMLIT_SERVER_ADDRESS: "0.0.0.0"
  STREAMLIT_SERVER_HEADLESS: "true"
  STREAMLIT_BROWSER_GATHER_USAGE_STATS: "false"
  SAFETY_MODE: "enabled"
  OLLAMA_HOST: "localhost:11434"
  OLLAMA_MODEL: "llama3.2"
  OLLAMA_ENABLED: "false"
---
apiVersion: v1
kind: Secret
metadata:
  name: expert-llm-secrets
  namespace: expert-llm-system
type: Opaque
data:
  # Add any sensitive configuration here (base64 encoded)
  admin-password: ZXhwZXJ0LWxsbS1hZG1pbg==  # expert-llm-admin
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: expert-llm-system
  namespace: expert-llm-system
  labels:
    app: expert-llm-system
    version: v1
spec:
  replicas: 1  # Local deployment - single replica
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: expert-llm-system
  template:
    metadata:
      labels:
        app: expert-llm-system
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8501"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: expert-llm-sa
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
        fsGroup: 0
      containers:
      - name: expert-llm-system
        image: localhost/expert-llm-system:v9-no-ollama
        imagePullPolicy: Never
        ports:
        - containerPort: 8501
          name: http
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        envFrom:
        - configMapRef:
            name: expert-llm-config
        - secretRef:
            name: expert-llm-secrets
        volumeMounts:
        - name: temp-volume
          mountPath: /app/temp
        - name: logs-volume
          mountPath: /app/logs
        - name: data-volume
          mountPath: /app/data
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /_stcore/health
            port: 8501
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /_stcore/health
            port: 8501
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /_stcore/health
            port: 8501
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 12
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: data-volume
        emptyDir:
          sizeLimit: 1Gi
      - name: logs-volume
        emptyDir:
          sizeLimit: 500Mi
      - name: temp-volume
        emptyDir:
          sizeLimit: 1Gi
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - expert-llm-system
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "node-role.kubernetes.io/spot"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  name: expert-llm-service
  namespace: expert-llm-system
  labels:
    app: expert-llm-system
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec:
  type: NodePort  # Use NodePort for local access
  ports:
  - port: 80
    targetPort: 8501
    protocol: TCP
    name: http
  selector:
    app: expert-llm-system
---
apiVersion: v1
kind: Service
metadata:
  name: expert-llm-headless
  namespace: expert-llm-system
  labels:
    app: expert-llm-system
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - port: 8501
    targetPort: 8501
    protocol: TCP
    name: http
  selector:
    app: expert-llm-system
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: expert-llm-ingress
  namespace: expert-llm-system
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/websocket-services: "expert-llm-service"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - expert-llm.yourdomain.com
    secretName: expert-llm-tls
  rules:
  - host: expert-llm.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: expert-llm-service
            port:
              number: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: expert-llm-hpa
  namespace: expert-llm-system
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: expert-llm-system
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: expert-llm-pdb
  namespace: expert-llm-system
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: expert-llm-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: expert-llm-sa
  namespace: expert-llm-system
  labels:
    app: expert-llm-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: expert-llm-clusterrole
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "nodes", "namespaces"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets", "daemonsets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions", "networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: expert-llm-clusterrolebinding
subjects:
- kind: ServiceAccount
  name: expert-llm-sa
  namespace: expert-llm-system
roleRef:
  kind: ClusterRole
  name: expert-llm-clusterrole
  apiGroup: rbac.authorization.k8s.io
